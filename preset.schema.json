{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "Settings of the acoustic system",
	"description": "Settings file for the acoustic system describing the sample space, beam and topology.\nSchema on github: https://github.com/Engineer2B/PowerCalculator-Schemas",
	"type": "object",
	"required": [
		"Name",
		"Sampling",
		"System"
	],
	"properties": {
		"Name": {
			"type": "string",
			"description": "Name of this configuration."
		},
		"Description": {
			"type": "string",
			"description": "User-friendly description of this configuration."
		},
		"Sampling": {
			"type": "object",
			"description": "Settings of the sampling space.",
			"required": [
				"LatticeSpacing",
				"LatticeExtrema",
				"RaysPerElement",
				"PowerLimit",
				"ThetaMax"
			],
			"properties": {
				"LatticeSpacing": {
					"description": "Spacing between points inside the lattice box in [m, m, m].",
					"$ref": "#/definitions/Vector"
				},
				"LatticeExtrema": {
					"type": "object",
					"description": "Maximal and minimal values that describe the lattice box in [m].",
					"required": [
						"X",
						"Y",
						"Z"
					],
					"properties": {
						"X": {
							"$ref": "#/definitions/Extremum"
						},
						"Y": {
							"$ref": "#/definitions/Extremum"
						},
						"Z": {
							"$ref": "#/definitions/Extremum"
						}
					}
				},
				"RaysPerElement": {
					"type": "integer",
					"description": "Number of rays per transducer element.",
					"minimum": 1
				},
				"PowerLimit": {
					"type": "number",
					"description": "If the power of the ray goes below this limit in [W], no new rays can be generated from the ray.",
					"exclusiveMinimum": 0
				},
				"ThetaMax": {
					"type": "number",
					"description": "Maximal angle up to which rays are generated by the transducer elements. Theta is defined for each individual transducer element as the angle between the direction of the element and the plane in which it lies.",
					"exclusiveMinimum": 0,
					"maximum": 1.5707963267948966
				}
			}
		},
		"System": {
			"type": "object",
			"description": "Settings of the system configuration.",
			"required": [
				"Topology",
				"Specimen",
				"ObjectTransformation",
				"Transducer"
			],
			"properties": {
				"Topology": {
					"description": "Type of topology that will be used to describe the ablated object.",
					"enum": [
						"FConfiguration::Abstract",
						"FConfiguration::Mesh"
					]
				},
				"Specimen": {
					"type": "string",
					"description": "Media will be loaded from the $folder defined by FConfiguration::($folder). The weird notation results in an enum when loaded in C++.",
					"pattern": "FConfiguration::\\w+"
				},
				"ObjectTransformation": {
					"description": "Transformation applied to the object.",
					"$ref": "#/definitions/Transformation"
				},
				"Transducer": {
					"type": "object",
					"required": [
						"ElementRadius",
						"Transformation",
						"NaturalFocus",
						"Focus",
						"Power",
						"Frequency",
						"FocusDiameter"
					],
					"description": "Settings of the transducer.",
					"properties": {
						"ElementRadius": {
							"type": "number",
							"exclusiveMinimum": 0,
							"description": "Radius of the transducer element in [m]."
						},
						"Transformation": {
							"description": "Transformation applied to the transducer positions and natural focus.",
							"$ref": "#/definitions/Transformation"
						},
						"NaturalFocus": {
							"description": "Unshifted focus of the transducer in [m, m, m] (if ScaleFactor is 1).",
							"$ref": "#/definitions/Vector"
						},
						"Focus": {
							"description": "Position towards which the focus is phase-shifted in [m, m, m].",
							"$ref": "#/definitions/Vector"
						},
						"Power": {
							"type": "number",
							"description": "Total amount of power that the transducer sends out in [W].",
							"exclusiveMinimum": 0
						},
						"Frequency": {
							"type": "number",
							"description": "Frequency at which the transducer elements oscillate in [Hz].",
							"exclusiveMinimum": 0
						},
						"FocusDiameter": {
							"type": "number",
							"description": "Diameter of the area of focus in [m].",
							"enum": [
								0.2e-3,
								0.4e-3,
								0.8e-3
							]
						}
					}
				},
				"Abstract": {
					"description": "Configuration of the abstract surface topology, currently with lists of planes and cylinders.",
					"type": "object",
					"anyOf": [{
							"required": [
								"Cylinders"
							]
						},
						{
							"required": [
								"Planes"
							]
						}
					],
					"properties": {
						"Cylinders": {
							"type": "array",
							"description": "Infinitely tall cylindrical surface.",
							"items": {
								"type": "object",
								"required": [
									"Medium",
									"Radius",
									"Center",
									"Direction",
									"Id"
								],
								"properties": {
									"Medium": {
										"description": "Type of medium that the inward normal vector is pointing towards.",
										"type": "string",
										"pattern": "FMedium::\\w+"
									},
									"Radius": {
										"description": "Radius of the cylinder in [m] (if ScaleFactor is 1).",
										"type": "number",
										"exclusiveMinimum": 0
									},
									"Center": {
										"description": "Center of the cylinder in [m, m, m] (if ScaleFactor is 1).",
										"$ref": "#/definitions/Vector"
									},
									"Direction": {
										"description": "The direction that is perpendicular to the axis of the cylinder, i.e. the direction the shaft is pointed towards.",
										"$ref": "#/definitions/Vector"
									},
									"Id": {
										"description": "Identifier for this surface. This identifier should be unique amongst all other objects.",
										"type": "integer",
										"exclusiveMinimum": 0
									}
								}
							}
						},
						"Planes": {
							"type": "array",
							"description": "Infinite planar surfaces that are placed parallel to each other, i.e. if they don't all have the same normal vector, they will intersect yielding an incorrect topology.",
							"items": {
								"type": "object",
								"required": [
									"Medium",
									"Center",
									"Direction",
									"Id"
								],
								"properties": {
									"Medium": {
										"type": "string",
										"pattern": "FMedium::\\w+"
									},
									"Center": {
										"$ref": "#/definitions/Vector",
										"description": "Location of the center of the plane"
									},
									"Direction": {
										"$ref": "#/definitions/Vector",
										"description": "Direction of the normal vector to the plane."
									},
									"Id": {
										"description": "Identifier for this surface. This identifier should be unique amongst all other objects.",
										"type": "integer",
										"exclusiveMinimum": 0
									}
								}
							}
						}
					}
				}
			},
			"if": {
				"properties": {
					"Topology": {
						"enum": [
							"FConfiguration::Abstract"
						]
					}
				}
			},
			"then": {
				"required": [
					"Abstract"
				]
			}
		}
	},
	"definitions": {
		"Extremum": {
			"properties": {
				"Min": {
					"type": "number",
					"description": "The minimimal value."
				},
				"Max": {
					"type": "number",
					"description": "The maximal value."
				}
			}
		},
		"Vector": {
			"type": "object",
			"required": [
				"X",
				"Y",
				"Z"
			]
		},
		"Transformation": {
			"required": [
				"Inclination",
				"Azimuth",
				"ScaleFactor",
				"Translation"
			],
			"properties": {
				"Inclination": {
					"type": "number",
					"description": "X or Y axis rotation angle in radians."
				},
				"Azimuth": {
					"type": "number",
					"description": "Z axis rotation angle in radians."
				},
				"ScaleFactor": {
					"type": "number",
					"description": "Scalar multiplier."
				},
				"Translation": {
					"description": "Vector of translation in [m, m, m] (if ScaleFactor is 1).",
					"$ref": "#/definitions/Vector"
				}
			}
		}
	}
}